{"version":3,"sources":["helpers/global.js","components/Footer.js","components/GlobalStyle.js","components/Container/index.js","components/Title/index.js","components/Search.js","components/Results/elements.js","components/Audio/index.js","helpers/transformers.js","helpers/http.js","helpers/requests.js","components/Results/index.js","containers/App.js","components/ArtistWidget/elements.js","components/ArtistWidget/index.js","components/Album/list.js","components/Album/track.js","components/Album/item.js","containers/Artist.js","routes.js","serviceWorker.js","index.js"],"names":["global","fontFamily","primaryColor","secondaryColor","StyledFooter","styled","footer","_templateObject","Credits","span","_templateObject2","Footer","react_default","a","createElement","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","StyledContainer","div","Container_templateObject","Container","_ref","children","StyledTitle","h1","Title_templateObject","Title","StyledSearchWrapper","Search_templateObject","StyledSearch","input","Search_templateObject2","StyledSearchBtn","button","_templateObject3","Search","state","search","handleChange","e","_this","setState","target","value","onSearch","this","props","type","placeholder","onChange","onClick","src","title","alt","Component","List","ul","elements_templateObject","Item","li","elements_templateObject2","CoverImage","img","elements_templateObject3","WrapperInformations","_templateObject4","ArtistName","_templateObject5","MusicName","_templateObject6","PlayerBtn","Audio_templateObject","situation","StyledAudio","audio","Audio_templateObject2","Audio","audioRef","React","createRef","toggleSituation","isPlaying","isPaused","current","paused","percentage","hasPropsOnTimeUpdate","onTimeUpdate","hasAudioRef","percent","currentTime","duration","toFixed","handleClickAudio","play","pause","controls","preload","ref","changeImageSize","urlImage","replace","http","method","url","options","Object","objectWithoutProperties","axios","objectSpread","headers","Content-Type","concat","then","_ref2","data","catch","err","console","error","message","byTerm","term","results","getArtist","artistId","shift","getAlbumsFromArtist","filterAlbumsOnly","result","wrapperType","_ref3","filter","getSongsFromAlbum","collectionId","filterSongsOnly","_ref4","Results","prevProps","length","map","key","artworkUrl100","Link","to","artistName","trackCensoredName","components_Audio","previewUrl","log","App","handleClickSearch","react","components_Title","components_Search","handleChangeSearch","components_Results","Avatar","ArtistWidget_elements_templateObject","h3","ArtistWidget_elements_templateObject2","Genre","ArtistWidget_elements_templateObject3","Wrapper","elements_templateObject4","ArtistWidget","artist","href","artistLinkUrl","rel","elements_ArtistName","primaryGenreName","StyledAlbumList","list_templateObject","AlbumList","TrackItem","track_templateObject","Image","track_templateObject2","Name","track_templateObject3","Collection","small","track_templateObject4","Info","track_templateObject5","track_templateObject6","Track","song","releaseYear","releaseDate","split","track_Wrapper","trackName","collectionName","StyledAlbumItem","item_templateObject","TrackList","item_templateObject2","AlbumItem","songs","album","track","Artist","albums","match","params","_this$state","components_ArtistWidget","list","item","Routes","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","components_Container","routes","components_GlobalStyle","components_Footer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efcb99b5.chunk.js","sourcesContent":["export default {\n\tappName: 'iTunes API',\n\tstyle: {\n\t\tfontFamily: 'Montserrat, sans-serif',\n\t\tprimaryColor: '#fd365e',\n\t\tsecondaryColor: '#333'\n\t},\n\tapiHost: 'https://itunes.apple.com'\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport global from 'helpers/global';\n\nconst StyledFooter = styled.footer`\n\theight: 80px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: fixed;\n\twidth: 100%;\n\tbottom: 0;\n`;\n\nconst Credits = styled.span`\n\tcolor: ${global.style.primaryColor};\n\tfont-size: 0.9em;\n`;\n\nconst Footer = () => (\n\t<StyledFooter>\n\t\t<Credits>Made by Gabriel Ferreira</Credits>\n\t</StyledFooter>\n);\n\nexport default Footer;\n","import { createGlobalStyle } from \"styled-components\";\nimport global from \"helpers/global\";\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        height: 100%;\n    }\n\n    body {\n        height: 100%;\n        margin: 0;\n        background: linear-gradient(180deg,#fff,#f5f5f5);\n        background-repeat: no-repeat;\n        background-attachment: fixed;\n        font-family: ${global.style.fontFamily};\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n\tpadding-right: 15px;\n\tpadding-left: 15px;\n\tmargin-right: auto;\n\tmargin-left: auto;\n\n\t@media (min-width: 768px) {\n\t\twidth: 750px;\n\t}\n\t@media (min-width: 992px) {\n\t\twidth: 970px;\n\t}\n\t@media (min-width: 1200px) {\n\t\twidth: 1170px;\n\t}\n`;\n\nconst Container = ({ children }) => <StyledContainer>{children}</StyledContainer>;\n\nexport default Container;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport global from \"helpers/global\";\n\nconst StyledTitle = styled.h1`\n  text-align: center;\n  font-family: ${global.style.fontFamily};\n  color: ${global.style.primaryColor};\n  font-weight: 900;\n  font-size: 3.5em;\n`;\n\nconst Title = () => <StyledTitle>{global.appName}</StyledTitle>;\n\nexport default Title;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport global from 'helpers/global';\n\nconst StyledSearchWrapper = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin-top: 10vh;\n`;\n\nconst StyledSearch = styled.input`\n\tborder: none;\n\tborder-bottom: 3px solid ${global.style.primaryColor};\n\tbackground-color: transparent;\n\toutline: none;\n\tpadding: 5px;\n\tfont-size: 1.4em;\n\twidth: 40%;\n\ttext-align: center;\n\tfont-family: ${global.style.fontFamily};\n\tfont-weight: 300;\n\tcolor: ${global.style.secondaryColor};\n`;\n\nconst StyledSearchBtn = styled.button`\n\tright: 0;\n\tbackground: transparent;\n\tborder: none;\n\toutline: none;\n\tcursor: pointer;\n\n\t> img {\n\t\twidth: 30px;\n\t\twill-change: transform;\n\t\ttransition: transform 200ms ease;\n\t\timage-rendering: optimizeQuality;\n\t}\n\n\t&:hover {\n\t\t> img {\n\t\t\ttransform: rotate(20deg);\n\t\t}\n\t}\n`;\n\nclass Search extends Component {\n\tstate = {\n\t\tsearch: ''\n\t};\n\n\thandleChange = e => this.setState({ search: e.target.value });\n\n\trender() {\n\t\tconst { onSearch } = this.props;\n\t\tconst { search } = this.state;\n\n\t\treturn (\n\t\t\t<StyledSearchWrapper>\n\t\t\t\t<StyledSearch type=\"text\" placeholder=\"o que você está procurando?\" onChange={this.handleChange} />\n\t\t\t\t<StyledSearchBtn type=\"button\" onClick={() => onSearch(search)}>\n\t\t\t\t\t<img src=\"search.svg\" title=\"Clique aqui para realizar a busca\" alt=\"Ícone de busca\" />\n\t\t\t\t</StyledSearchBtn>\n\t\t\t</StyledSearchWrapper>\n\t\t);\n\t}\n}\n\nSearch.propTypes = {\n\tonSearch: PropTypes.func.isRequired\n};\n\nexport default Search;\n","import styled from 'styled-components';\nimport global from 'helpers/global';\n\nexport const List = styled.ul`\n\tlist-style-type: none;\n\tpadding: 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tmargin-top: 30px;\n`;\n\nexport const Item = styled.li`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: calc(100% / 7);\n\tflex-wrap: wrap;\n\tmargin: 0 10px 30px 10px;\n`;\n\nexport const CoverImage = styled.img`\n\twidth: 100%;\n\theight: 200px;\n\tobject-fit: cover;\n\twill-change: filter;\n\ttransition: filter 200ms ease;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tfilter: grayscale(80%);\n\t}\n`;\n\nconst wrapperHeight = 40;\n\nexport const WrapperInformations = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\t/* flex-wrap: wrap; */\n\tjustify-content: space-between;\n\ttext-align: left;\n\theight: ${wrapperHeight}px;\n\twidth: 100%;\n\tmargin-top: 5px;\n`;\n\nexport const ArtistName = styled.span`\n\tfont-family: ${global.style.fontFamily};\n\tfont-weight: 700;\n\twidth: 100%;\n\tfont-size: 0.8em;\n\tcolor: ${global.style.secondaryColor};\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const MusicName = styled.span`\n\tfont-style: italic;\n\tfont-size: 0.7em;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst fileNameBySituation = situation => (situation === 'playing' ? 'paused' : 'playing');\n\nconst PlayerBtn = styled.div`\n\tright: 0;\n\ttop: 0;\n\theight: 30px;\n\twidth: 30px;\n\tbackground: transparent;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\t&:before {\n\t\tcontent: url(/${props => fileNameBySituation(props.situation)}.svg);\n\t}\n`;\n\nconst StyledAudio = styled.audio`\n\tdisplay: none;\n`;\n\nclass Audio extends Component {\n\tstate = {\n\t\tsituation: 'paused'\n\t};\n\n\taudioRef = React.createRef();\n\n\ttoggleSituation = () => {\n\t\tconst isPlaying = this.state.situation === 'playing';\n\t\tthis.setState({ situation: isPlaying ? 'paused' : 'playing' });\n\t};\n\n\tisPaused = () => !!this.audioRef.current.paused;\n\n\tpercentage = () => {\n\t\tconst hasPropsOnTimeUpdate = !!this.props.onTimeUpdate;\n\t\tconst hasAudioRef = !!this.audioRef.current;\n\n\t\tif (!hasPropsOnTimeUpdate || !hasAudioRef) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentTime = this.audioRef.current.currentTime;\n\t\tconst duration = this.audioRef.current.duration;\n\n\t\tconst percent = ((currentTime / duration) * 100).toFixed(2);\n\n\t\tthis.props.onTimeUpdate(percent);\n\t};\n\n\thandleClickAudio = () => {\n\t\tif (this.isPaused()) {\n\t\t\tthis.toggleSituation();\n\n\t\t\treturn this.audioRef.current.play();\n\t\t}\n\n\t\tthis.toggleSituation();\n\n\t\treturn this.audioRef.current.pause();\n\t};\n\n\trender() {\n\t\tconst { situation } = this.state;\n\t\tconst { audio } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<StyledAudio controls preload=\"false\" onTimeUpdate={this.percentage} ref={this.audioRef}>\n\t\t\t\t\t<source src={audio} />\n\t\t\t\t</StyledAudio>\n\t\t\t\t<PlayerBtn\n\t\t\t\t\tonClick={this.handleClickAudio}\n\t\t\t\t\tsituation={situation}\n\t\t\t\t\ttitle=\"Clique aqui para ouvir o preview\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAudio.propTypes = {\n\taudio: PropTypes.string.isRequired,\n\tonTimeUpdate: PropTypes.func\n};\n\nexport default Audio;\n","/**\n * Método responsável por receber a URL de uma determinada imagem da API de iTunes\n * e mudar a dimensão dela para 450px\n */\nexport const changeImageSize = urlImage => urlImage.replace('100x100', '450x450');\n\n/**\n * Obtém o ano a partir de um release date da api:\n * Ex: 1991-09-04T07:00:00Z\n *\n * @param {*} releaseDate\n */\nexport const getYearFromRelease = releaseDate => releaseDate.split('-').shift();\n","import axios from 'axios';\nimport global from 'helpers/global';\n\nexport default ({ method, url, ...options }) =>\n\taxios({\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\turl: `${global.apiHost}${url}`,\n\t\tmethod,\n\t\t...options\n\t})\n\t\t.then(({ data }) => data)\n\t\t.catch(err => console.error(err.message));\n","import http from 'helpers/http';\n\n/**\n * Realiza uma busca por termos\n *\n * @param {*} term\n */\nexport const byTerm = term =>\n\thttp({\n\t\tmethod: 'GET',\n\t\turl: `/search?term=${term}&entity=song`\n\t}).then(({ results }) => results);\n\n/**\n * Realize uma busca pelo ID do artista e retorna o primeiro encontrado\n *\n * @param {*} artistId\n */\nexport const getArtist = artistId =>\n\thttp({\n\t\tmethod: 'GET',\n\t\turl: `/lookup?id=${artistId}`\n\t}).then(({ results }) => results.shift());\n\n/**\n * Obtem os 3 albuns mais recentes de um determinado artista\n *\n * @param {*} artistId\n */\nexport const getAlbumsFromArtist = artistId => {\n\tconst filterAlbumsOnly = result => result.wrapperType === 'collection';\n\n\treturn http({\n\t\tmethod: 'GET',\n\t\turl: `/lookup?id=${artistId}&entity=album&limit=3&sort=recent`\n\t}).then(({ results }) => results.filter(filterAlbumsOnly));\n};\n\n/**\n * Obtem 5 músicas de um determinado album\n *\n * @param {*} collectionId\n */\nexport const getSongsFromAlbum = collectionId => {\n\tconst filterSongsOnly = result => result.wrapperType === 'track';\n\n\treturn http({\n\t\tmethod: 'GET',\n\t\turl: `/lookup?id=${collectionId}&entity=song&limit=5`\n\t}).then(({ results }) => results.filter(filterSongsOnly));\n};\n","import React, { Component } from 'react';\nimport { List, Item, CoverImage, WrapperInformations, ArtistName, MusicName } from './elements';\nimport Audio from 'components/Audio';\nimport { changeImageSize } from 'helpers/transformers';\nimport { byTerm } from 'helpers/requests';\nimport { Link } from 'react-router-dom';\n\nclass Results extends Component {\n\tstate = {\n\t\tresults: []\n\t};\n\n\tasync componentDidUpdate(prevProps) {\n\t\tconst { term } = this.props;\n\n\t\tif (term === prevProps.term) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst results = await byTerm(term);\n\n\t\tthis.setState({ results });\n\t}\n\n\trender() {\n\t\tthis.audioRef = [];\n\n\t\tconst hasResults = this.state.results.length > 0;\n\n\t\treturn (\n\t\t\thasResults && (\n\t\t\t\t<List>\n\t\t\t\t\t{this.state.results.map((result, key) => (\n\t\t\t\t\t\t<Item key={key}>\n\t\t\t\t\t\t\t<CoverImage src={changeImageSize(result.artworkUrl100)} />\n\t\t\t\t\t\t\t<WrapperInformations>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ArtistName title=\"Clique aqui para ver informações sobre o artista\">\n\t\t\t\t\t\t\t\t\t\t<Link to={`/artist/${result.artistId}`}>{result.artistName}</Link>\n\t\t\t\t\t\t\t\t\t</ArtistName>\n\t\t\t\t\t\t\t\t\t<MusicName>{result.trackCensoredName}</MusicName>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Audio audio={result.previewUrl} onTimeUpdate={percent => console.log(percent)} />\n\t\t\t\t\t\t\t</WrapperInformations>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t)\n\t\t);\n\t}\n}\n\nexport default Results;\n","import React, { Fragment, Component } from 'react';\nimport Title from 'components/Title';\nimport Search from 'components/Search';\nimport Results from 'components/Results';\n\nclass App extends Component {\n\tstate = {\n\t\tsearch: ''\n\t};\n\n\thandleClickSearch = search => this.setState({ search });\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Title />\n\t\t\t\t<Search onChange={this.handleChangeSearch} onSearch={this.handleClickSearch} />\n\t\t\t\t<Results term={this.state.search} />\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","import styled from 'styled-components';\nimport global from 'helpers/global';\n\nexport const Avatar = styled.img`\n\tborder-radius: 50%;\n\twidth: 250px;\n\theight: 250px;\n\tobject-fit: cover;\n\tborder: 2px solid ${global.style.primaryColor};\n`;\n\nexport const ArtistName = styled.h3`\n\tfont-weight: 200;\n\tfont-size: 1.5em;\n\tmargin: 0;\n\tcolor: ${global.style.secondaryColor};\n`;\n\nexport const Genre = styled.span`\n\ttext-transform: uppercase;\n\tfont-size: 0.75em;\n\tfont-weight: 900;\n\tcolor: ${global.style.secondaryColor};\n`;\n\nexport const Wrapper = styled.div`\n\ttext-align: center;\n`;\n","import React from 'react';\nimport { Wrapper, Avatar, ArtistName, Genre } from './elements';\n\nconst ArtistWidget = ({ artist }) => (\n\t<Wrapper>\n\t\t<a href={artist.artistLinkUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t<Avatar src=\"/not-found-avatar.png\" alt={artist.artistName} title={artist.artistName} />\n\t\t</a>\n\t\t<ArtistName>{artist.artistName}</ArtistName>\n\t\t<Genre>{artist.primaryGenreName}</Genre>\n\t</Wrapper>\n);\n\nexport default ArtistWidget;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledAlbumList = styled.ul`\n\tlist-style-type: none;\n\tpadding: 0;\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: space-around;\n`;\n\nconst AlbumList = ({ children }) => <StyledAlbumList>{children}</StyledAlbumList>;\n\nexport default AlbumList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getYearFromRelease } from 'helpers/transformers';\nimport global from 'helpers/global';\nimport Audio from 'components/Audio';\n\nconst TrackItem = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding-right: 10px;\n\tmargin-bottom: 5px;\n\tborder-bottom: 1px solid rgba(105, 105, 105, 0.058);\n\tpadding-bottom: 5px;\n`;\n\nconst Image = styled.img`\n\tmargin-right: 7px;\n\tborder-radius: 10px;\n`;\n\nconst Name = styled.span`\n\twidth: 100%;\n\tfont-weight: 700;\n\tcolor: ${global.style.primaryColor};\n`;\n\nconst Collection = styled.small`\n\ttext-transform: uppercase;\n\tfont-size: 0.6em;\n\tfont-weight: 900;\n\tcolor: ${global.style.secondaryColor};\n`;\n\nconst Info = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-wrap: wrap;\n`;\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst Track = ({ song }) => {\n\tconst releaseYear = getYearFromRelease(song.releaseDate);\n\n\treturn (\n\t\t<TrackItem>\n\t\t\t<Wrapper>\n\t\t\t\t<Image src={song.artworkUrl100} alt={song.trackName} title={song.trackName} />\n\t\t\t\t<Info>\n\t\t\t\t\t<Name>{song.trackName}</Name>\n\t\t\t\t\t<Collection>\n\t\t\t\t\t\t{song.collectionName} ({releaseYear})\n\t\t\t\t\t</Collection>\n\t\t\t\t</Info>\n\t\t\t</Wrapper>\n\t\t\t<Audio audio={song.previewUrl} />\n\t\t</TrackItem>\n\t);\n};\n\nexport default Track;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { getSongsFromAlbum } from 'helpers/requests';\nimport { changeImageSize } from 'helpers/transformers';\nimport Track from './track';\n\nconst StyledAlbumItem = styled.li`\n\tmargin: 15px;\n`;\n\nconst TrackList = styled.ul`\n\tlist-style-type: none;\n\tpadding: 0;\n`;\n\nclass AlbumItem extends Component {\n\tstate = {\n\t\tsongs: []\n\t};\n\n\tasync componentDidMount() {\n\t\tconst { collectionId } = this.props.album;\n\n\t\tconst songs = await getSongsFromAlbum(collectionId);\n\n\t\tthis.setState({ songs });\n\t}\n\n\trender() {\n\t\tconst { album } = this.props;\n\n\t\treturn (\n\t\t\t<StyledAlbumItem>\n\t\t\t\t<img\n\t\t\t\t\tsrc={changeImageSize(album.artworkUrl100)}\n\t\t\t\t\talt={album.collectionName}\n\t\t\t\t\ttitle={album.collectionName}\n\t\t\t\t/>\n\t\t\t\t<TrackList>\n\t\t\t\t\t{this.state.songs.map(song => (\n\t\t\t\t\t\t<Track song={song} />\n\t\t\t\t\t))}\n\t\t\t\t</TrackList>\n\t\t\t</StyledAlbumItem>\n\t\t);\n\t}\n}\n\nexport default AlbumItem;\n","import React, { Component } from 'react';\nimport { getArtist, getAlbumsFromArtist } from 'helpers/requests';\nimport ArtistWidget from 'components/ArtistWidget';\nimport { AlbumList, AlbumItem } from 'components/Album';\n\nclass Artist extends Component {\n\tstate = {\n\t\tartist: [],\n\t\talbums: []\n\t};\n\n\tasync componentDidMount() {\n\t\tconst { artistId } = this.props.match.params;\n\n\t\tconst artist = await getArtist(artistId);\n\t\tconst albums = await getAlbumsFromArtist(artistId);\n\n\t\tthis.setState({ artist, albums });\n\t}\n\n\trender() {\n\t\tconst { artist, albums } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{artist && <ArtistWidget artist={artist} />}\n\t\t\t\t<AlbumList>\n\t\t\t\t\t{albums.map((album, key) => (\n\t\t\t\t\t\t<AlbumItem album={album} key={key} />\n\t\t\t\t\t))}\n\t\t\t\t</AlbumList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Artist;\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport App from 'containers/App';\nimport Artist from 'containers/Artist';\n\nconst Routes = () => (\n\t<Fragment>\n\t\t<Route exact path=\"/\" component={App} />\n\t\t<Route path=\"/artist/:artistId\" component={Artist} />\n\t</Fragment>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Footer from 'components/Footer';\nimport GlobalStyle from 'components/GlobalStyle';\nimport Container from 'components/Container';\nimport Routes from 'routes';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst AppRouter = () => (\n\t<Router>\n\t\t<Fragment>\n\t\t\t<Container>\n\t\t\t\t<Routes />\n\t\t\t</Container>\n\t\t\t<GlobalStyle />\n\t\t\t<Footer />\n\t\t</Fragment>\n\t</Router>\n);\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}